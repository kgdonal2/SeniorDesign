from machine import Pin, UART
import utime

TRANS = 1
RECIEVE = 0

uart = UART(1, baudrate=9600, tx=8, rx=9)

enable_pin = 7 # Drive LOW to enable receiver, HIGH to enable Driver

def calculate_crc(data):
    crc = 0xFFFF
    for byte in data:
        crc ^= byte
        for _ in range(8):
            if crc & 0x0001:
                crc >>= 1
                crc ^= 0xA001
            else:
                crc >>= 1
    return crc.to_bytes(2, 'little')  # Using 'little' endianness for correct byte order

def setup():
    enable = Pin(enable_pin, Pin.OUT)
    enable.value(TRANS)
    
    utime.sleep(1)
    # Query original address
    query_address = b'\x00\x03\x00\x00\x00\x01'
    crc = calculate_crc(query_address)
    query_address += crc
    print("Asking for original address:", query_address)
    uart.write(query_address)
    
    # Read and print the response
    utime.sleep(3)
    enable.value(RECIEVE)
    utime.sleep(1)
    response = uart.read()
    if response:
        print("Response from original address:", response)
    else:
        print("No response from original address")
        
        
    utime.sleep(.5)
    enable.value(TRANS)
    utime.sleep(1)
    # Set new address
    new_address_command = b'\x00\x06\x00\x00\x00\xbb'  # Change the new address here
    #crc = calculate_crc(new_address_command)
    new_address_command += crc
    print("Setting new address:", new_address_command)
    uart.write(new_address_command)
    utime.sleep(3)
    
    # Read and print the response
    enable.value(RECIEVE)
    utime.sleep(1)
    response = uart.read()
    if response:
        print("Address changed to:", response)
    else:
        print("No response after setting new address")
        
    utime.sleep(.5)
    enable.value(TRANS)
    utime.sleep(1)
    # Query new address
    query_new_address = b'\x00\x03\x00\x00\x00\x01'
    crc = calculate_crc(query_new_address)
    query_new_address += crc
    print("Querying new address:", query_new_address)
    uart.write(query_new_address)
    utime.sleep(3)
    
    # Read and print the response
    enable.value(RECIEVE)
    utime.sleep(1)
    response = uart.read()

    if response:
        print("Response from new address:", response)
    else:
        print("No response from new address")
    
    utime.sleep(1)
    enable.value(TRANS)

def loop():
    read_data_command = b'\xBB\x03\x00\x00\x00\x02'
    crc = calculate_crc(read_data_command)
    read_data_command += crc
    print("Reading data:", read_data_command)
    uart.write(read_data_command)
    utime.sleep(1)
    
    
    
    if uart.any():
        data = uart.read()
        print("Received data:", " ".join(hex(byte) for byte in data))
    else:
        print("No data received")

    utime.sleep(1)

if __name__ == "__main__":
    setup()
    while True:
        loop()

